module N2O where

import N2O.Cache as Cache
import N2O.Session as Session
import Control.Monad (IO)
import Foreign (ffi1, ffiIO1, ffiIO2)

pickle :: Binary -> Binary
pickle = ffi1 :n2o :pickle

depickle :: Binary -> Binary
depickle = ffi1 :n2o :depickle

encode :: forall k. k -> Binary
encode = ffi1 :n2o :encode

decode :: forall k. Binary -> IO k
decode = ffiIO1 :n2o :decode

reg :: forall k. k -> IO k
reg = ffiIO1 :n2o :reg

unreg :: forall k. k -> IO k
unreg = ffiIO1 :n2o :unreg

send :: forall k v z. k -> v -> IO z
send = ffiIO2 :n2o :send

getSession :: forall k v. k -> IO v
getSession = Session.get

putSession :: forall k v. k -> v -> IO v
putSession = Session.put

getCache :: forall k v. Atom -> k -> IO v
getCache = Cache.get

putCache :: forall k v. Atom -> k -> v -> IO v
putCache = Cache.put

