module 'String' ['concat'/2,
		 'equalIgnoreCase'/2,
		 'find'/2,
		 'findLast'/2,
		 'hasPrefix'/2,
		 'hasSuffix'/2,
		 'indexOf'/2,
		 'lastIndexOf'/2,
		 'lines'/1,
		 'module_info'/0,
		 'module_info'/1,
		 'padLeft'/2,
		 'padRight'/2,
		 'replace'/3,
		 'replaceFirst'/3,
		 'replaceLast'/3,
		 'replicate'/2,
		 'reverse'/1,
		 'sliceTo'/3,
		 'split'/2,
		 'strlen'/1,
		 'trimChars'/2,
		 'trimLeft'/1,
		 'trimLeftChars'/2,
		 'trimRight'/1,
		 'trimRightChars'/2,
		 'words'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[83|[116|[114|[105|[110|[103|[46|[101|[114|[108]]]]]]]]]],1}],
		%% Line 1
		'file' =
		    %% Line 1
		    [{[77|[97|[121|[98|[101|[46|[104|[114|[108]]]]]]]]],1}],
		%% Line 2
		'type' =
		    %% Line 2
		    [{'maybe',{'type',2,'union',[{'type',2,'tuple',[{'atom',2,'Nothing'}]}|[{'type',2,'tuple',[{'atom',2,'Just'}|[{'var',2,'A'}]]}]]},[{'var',2,'A'}]}],
		%% Line 18
		'file' =
		    %% Line 18
		    [{[83|[116|[114|[105|[110|[103|[46|[101|[114|[108]]]]]]]]]],18}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{'prefix',{'type',50,'string',[]},[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{'suffix',{'type',51,'string',[]},[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{'pattern',{'type',52,'string',[]},[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'replacement',{'type',53,'string',[]},[]}],
		%% Line 55
		'spec' =
		    %% Line 55
		    [{{'concat',2},[{'type',55,'fun',[{'type',55,'product',[{'type',55,'string',[]}|[{'type',55,'string',[]}]]}|[{'type',55,'string',[]}]]}]}],
		%% Line 58
		'spec' =
		    %% Line 58
		    [{{'reverse',1},[{'type',58,'fun',[{'type',58,'product',[{'type',58,'string',[]}]}|[{'type',58,'string',[]}]]}]}],
		%% Line 61
		'spec' =
		    %% Line 61
		    [{{'replicate',2},[{'type',61,'fun',[{'type',61,'product',[{'type',61,'pos_integer',[]}|[{'type',61,'string',[]}]]}|[{'type',61,'string',[]}]]}]}],
		%% Line 65
		'spec' =
		    %% Line 65
		    [{{'strlen',1},[{'type',65,'fun',[{'type',65,'product',[{'type',65,'string',[]}]}|[{'type',65,'integer',[]}]]}]}],
		%% Line 68
		'spec' =
		    %% Line 68
		    [{{'equalIgnoreCase',2},[{'type',68,'fun',[{'type',68,'product',[{'type',68,'string',[]}|[{'type',68,'string',[]}]]}|[{'type',68,'boolean',[]}]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'hasPrefix',2},[{'type',71,'fun',[{'type',71,'product',[{'type',71,'string',[]}|[{'user_type',71,'prefix',[]}]]}|[{'type',71,'boolean',[]}]]}]}],
		%% Line 75
		'spec' =
		    %% Line 75
		    [{{'hasSuffix',2},[{'type',75,'fun',[{'type',75,'product',[{'type',75,'string',[]}|[{'user_type',75,'suffix',[]}]]}|[{'type',75,'boolean',[]}]]}]}],
		%% Line 80
		'spec' =
		    %% Line 80
		    [{{'indexOf',2},[{'type',80,'fun',[{'type',80,'product',[{'type',80,'char',[]}|[{'type',80,'string',[]}]]}|[{'type',80,'integer',[]}]]}]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'lastIndexOf',2},[{'type',83,'fun',[{'type',83,'product',[{'type',83,'char',[]}|[{'type',83,'string',[]}]]}|[{'type',83,'integer',[]}]]}]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'find',2},[{'type',86,'fun',[{'type',86,'product',[{'type',86,'string',[]}|[{'user_type',86,'pattern',[]}]]}|[{'user_type',86,'maybe',[{'type',86,'string',[]}]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'findLast',2},[{'type',89,'fun',[{'type',89,'product',[{'type',89,'string',[]}|[{'user_type',89,'pattern',[]}]]}|[{'user_type',89,'maybe',[{'type',89,'string',[]}]}]]}]}],
		%% Line 98
		'spec' =
		    %% Line 98
		    [{{'replace',3},[{'type',98,'fun',[{'type',98,'product',[{'type',98,'string',[]}|[{'user_type',98,'pattern',[]}|[{'user_type',98,'replacement',[]}]]]}|[{'type',98,'string',[]}]]}]}],
		%% Line 102
		'spec' =
		    %% Line 102
		    [{{'replaceFirst',3},[{'type',102,'fun',[{'type',102,'product',[{'type',102,'string',[]}|[{'user_type',102,'pattern',[]}|[{'user_type',102,'replacement',[]}]]]}|[{'type',102,'string',[]}]]}]}],
		%% Line 106
		'spec' =
		    %% Line 106
		    [{{'replaceLast',3},[{'type',106,'fun',[{'type',106,'product',[{'type',106,'string',[]}|[{'user_type',106,'pattern',[]}|[{'user_type',106,'replacement',[]}]]]}|[{'type',106,'string',[]}]]}]}],
		%% Line 110
		'spec' =
		    %% Line 110
		    [{{'split',2},[{'type',110,'fun',[{'type',110,'product',[{'type',110,'string',[]}|[{'ann_type',110,[{'var',110,'Sep'}|[{'type',110,'string',[]}]]}]]}|[{'type',110,'list',[{'type',110,'string',[]}]}]]}]}],
		%% Line 113
		'spec' =
		    %% Line 113
		    [{{'lines',1},[{'type',113,'fun',[{'type',113,'product',[{'type',113,'string',[]}]}|[{'type',113,'list',[{'type',113,'string',[]}]}]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'words',1},[{'type',116,'fun',[{'type',116,'product',[{'type',116,'string',[]}]}|[{'type',116,'list',[{'type',116,'string',[]}]}]]}]}],
		%% Line 119
		'spec' =
		    %% Line 119
		    [{{'sliceTo',3},[{'type',119,'fun',[{'type',119,'product',[{'type',119,'string',[]}|[{'type',119,'pos_integer',[]}|[{'type',119,'pos_integer',[]}]]]}|[{'type',119,'string',[]}]]}]}],
		%% Line 123
		'spec' =
		    %% Line 123
		    [{{'padLeft',2},[{'type',123,'fun',[{'type',123,'product',[{'type',123,'string',[]}|[{'type',123,'pos_integer',[]}]]}|[{'type',123,'string',[]}]]}]}],
		%% Line 127
		'spec' =
		    %% Line 127
		    [{{'padRight',2},[{'type',127,'fun',[{'type',127,'product',[{'type',127,'string',[]}|[{'type',127,'pos_integer',[]}]]}|[{'type',127,'string',[]}]]}]}],
		%% Line 131
		'spec' =
		    %% Line 131
		    [{{'trimChars',2},[{'type',131,'fun',[{'type',131,'product',[{'type',131,'string',[]}|[{'type',131,'string',[]}]]}|[{'type',131,'string',[]}]]}]}],
		%% Line 134
		'spec' =
		    %% Line 134
		    [{{'trimLeft',1},[{'type',134,'fun',[{'type',134,'product',[{'type',134,'string',[]}]}|[{'type',134,'string',[]}]]}]}],
		%% Line 137
		'spec' =
		    %% Line 137
		    [{{'trimLeftChars',2},[{'type',137,'fun',[{'type',137,'product',[{'type',137,'string',[]}|[{'type',137,'string',[]}]]}|[{'type',137,'string',[]}]]}]}],
		%% Line 140
		'spec' =
		    %% Line 140
		    [{{'trimRight',1},[{'type',140,'fun',[{'type',140,'product',[{'type',140,'string',[]}]}|[{'type',140,'string',[]}]]}]}],
		%% Line 143
		'spec' =
		    %% Line 143
		    [{{'trimRightChars',2},[{'type',143,'fun',[{'type',143,'product',[{'type',143,'string',[]}|[{'type',143,'string',[]}]]}|[{'type',143,'string',[]}]]}]}]]
'concat'/2 =
    %% Line 56
    fun (_0,_1) ->
	call 'string':'concat'
	    (_0, _1)
'reverse'/1 =
    %% Line 59
    fun (_0) ->
	call 'lists':'reverse'
	    (_0)
'replicate'/2 =
    %% Line 62
    fun (_0,_1) ->
	let <_2> =
	    call %% Line 63
		 'lists':%% Line 63
			 'duplicate'
		(_0, _1)
	in  %% Line 63
	    call 'lists':'flatten'
		(_2)
'strlen'/1 =
    %% Line 66
    fun (_0) ->
	call 'string':'length'
	    (_0)
'equalIgnoreCase'/2 =
    %% Line 69
    fun (_0,_1) ->
	call 'string':'equal'
	    (_0, _1, 'true')
'hasPrefix'/2 =
    %% Line 72
    fun (_0,_1) ->
	%% Line 73
	call 'string':'prefix'
	    (_0, _1)
'hasSuffix'/2 =
    %% Line 76
    fun (_0,_1) ->
	let <_3> =
	    apply %% Line 77
		  'strlen'/1
		(_0)
	in  let <_2> =
		apply %% Line 77
		      'strlen'/1
		    (_1)
	    in  let <_4> =
		    call %% Line 77
			 'erlang':%% Line 77
				  '-'
			(_3, _2)
		in  let <Pos> =
			call %% Line 77
			     'erlang':%% Line 77
				      '+'
			    (_4, %% Line 77
				 1)
		    in  let <_6> =
			    call %% Line 78
				 'string':%% Line 78
					  'slice'
				(_0, %% Line 78
				     Pos)
			in  %% Line 78
			    call 'string':'equal'
				(_6, _1)
'indexOf'/2 =
    %% Line 81
    fun (_0,_1) ->
	call 'string':'chr'
	    (_1, _0)
'lastIndexOf'/2 =
    %% Line 84
    fun (_0,_1) ->
	call 'string':'rchr'
	    (_1, _0)
'find'/2 =
    %% Line 87
    fun (_0,_1) ->
	apply 'doFind'/3
	    (_0, _1, 'leading')
'findLast'/2 =
    %% Line 90
    fun (_0,_1) ->
	apply 'doFind'/3
	    (_0, _1, 'trailing')
'doFind'/3 =
    %% Line 92
    fun (_0,_1,_2) ->
	%% Line 93
	case call 'string':'find'
		 (_0, _1, _2) of
	  %% Line 94
	  <'nomatch'> when 'true' ->
	      {'Nothing'}
	  %% Line 95
	  <SubStr> when 'true' ->
	      {'Just',SubStr}
	end
'replace'/3 =
    %% Line 99
    fun (_0,_1,_2) ->
	%% Line 100
	call 'string':'replace'
	    (_0, _1, _2, 'all')
'replaceFirst'/3 =
    %% Line 103
    fun (_0,_1,_2) ->
	%% Line 104
	call 'string':'replace'
	    (_0, _1, _2, 'leading')
'replaceLast'/3 =
    %% Line 107
    fun (_0,_1,_2) ->
	%% Line 108
	call 'string':'replace'
	    (_0, _1, _2, 'trailing')
'split'/2 =
    %% Line 111
    fun (_0,_1) ->
	call 'string':'split'
	    (_0, _1, 'all')
'lines'/1 =
    %% Line 114
    fun (_0) ->
	call 'string':'split'
	    (_0, [10], 'all')
'words'/1 =
    %% Line 117
    fun (_0) ->
	call 'string':'tokens'
	    (_0, [9|[11|[12|[32|[160|[10|[13|[8232|[8233]]]]]]]]])
'sliceTo'/3 =
    %% Line 120
    fun (_0,_1,_2) ->
	let <_3> =
	    call %% Line 121
		 'erlang':%% Line 121
			  '-'
		(_2, _1)
	in  %% Line 121
	    call 'string':'slice'
		(_0, _1, _3)
'padLeft'/2 =
    %% Line 124
    fun (_0,_1) ->
	%% Line 125
	call 'string':'pad'
	    (_0, _1, 'leading')
'padRight'/2 =
    %% Line 128
    fun (_0,_1) ->
	%% Line 129
	call 'string':'pad'
	    (_0, _1, 'trailing')
'trimChars'/2 =
    %% Line 132
    fun (_0,_1) ->
	call 'string':'trim'
	    (_0, 'both', _1)
'trimLeft'/1 =
    %% Line 135
    fun (_0) ->
	call 'string':'trim'
	    (_0, 'leading')
'trimLeftChars'/2 =
    %% Line 138
    fun (_0,_1) ->
	call 'string':'trim'
	    (_0, 'leading', _1)
'trimRight'/1 =
    %% Line 141
    fun (_0) ->
	call 'string':'trim'
	    (_0, 'trailing')
'trimRightChars'/2 =
    %% Line 144
    fun (_0,_1) ->
	call 'string':'trim'
	    (_0, 'trailing', _1)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('String')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('String', _0)
end