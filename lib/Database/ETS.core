module 'ETS' ['info'/1,
	      'module_info'/0,
	      'module_info'/1,
	      'new'/2]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[69|[84|[83|[46|[101|[114|[108]]]]]]],1}],
		%% Line 21
		'spec' =
		    %% Line 21
		    [{{'new',2},[{'type',21,'fun',[{'type',21,'product',[{'type',21,'string',[]}|[{'type',21,'map','any'}]]}|[{'remote_type',21,[{'atom',21,'ets'}|[{'atom',21,'tab'}|[[]]]]}]]}]}],
		%% Line 25
		'spec' =
		    %% Line 25
		    [{{'info',1},[{'type',25,'fun',[{'type',25,'product',[{'remote_type',25,[{'atom',25,'ets'}|[{'atom',25,'tab'}|[[]]]]}]}|[{'type',25,'union',[{'type',25,'tuple',[{'atom',25,'Nothing'}]}|[{'type',25,'tuple',[{'atom',25,'Just'}|[{'type',25,'map','any'}]]}]]}]]}]}]]
'new'/2 =
    %% Line 22
    fun (_0,_1) ->
	let <_3> =
	    call %% Line 23
		 'erlang':%% Line 23
			  'list_to_atom'
		(_0)
	in  let <_2> =
		apply %% Line 23
		      'parseOpts'/1
		    (_1)
	    in  %% Line 23
		call 'ets':'new'
		    (_3, _2)
'info'/1 =
    %% Line 26
    fun (_0) ->
	%% Line 27
	case call 'ets':'info'
		 (_0) of
	  %% Line 28
	  <'undefined'> when 'true' ->
	      {'Nothing'}
	  %% Line 29
	  <Info> when 'true' ->
	      let <_1> =
		  apply 'info2Map'/1
		      (Info)
	      in  {'Just',_1}
	end
'parseOpts'/1 =
    %% Line 32
    fun (_0) ->
	case _0 of
	  <~{%% Line 37
	    'compressed':=Compressed,%% Line 34
				     'keyPos':=KeyPos,%% Line 33
						      'access':=Access,%% Line 36
								       'writeConcurrency':=W,%% Line 35
											     'readConcurrency':=R,'ttype':=Type}~> when 'true' ->
	      let <_1> =
		  apply %% Line 39
			'ttype'/1
		      (%% Line 39
		       Type)
	      in  let <_2> =
		      apply %% Line 40
			    'access'/1
			  (%% Line 40
			   Access)
		  in  let <Opts> =
			  [_1|%% Line 40
			      [_2|%% Line 41
				  ['named_table'|%% Line 42
						 [{'keypos',KeyPos}|%% Line 43
								    [{'read_concurrency',R}|%% Line 44
											    [{'write_concurrency',W}|%% Line 45
														     []]]]]]]
		      in  %% Line 46
			  case Compressed of
			    %% Line 47
			    <'true'> when 'true' ->
				['compressed'|Opts]
			    %% Line 48
			    <'false'> when 'true' ->
				Opts
			    ( <_4> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_4})
			      -| ['compiler_generated'] )
			  end
	  ( <_5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_5})
		  -| [{'function_name',{'parseOpts',1}}] )
	    -| ['compiler_generated'] )
	end
'info2Map'/1 =
    %% Line 51
    fun (_0) ->
	apply 'info2Map'/2
	    (_0, ~{}~)
'info2Map'/2 =
    %% Line 53
    fun (_0,_1) ->
	case <_0,_1> of
	  <[{'id',Id}|Info],M> when 'true' ->
	      %% Line 54
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_2> =
			  ~{'id'=>Id|M}~
		      in  apply 'info2Map'/2
			      (Info, _2)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 55
	  <[{'read_concurrency',R}|Info],M> when 'true' ->
	      %% Line 56
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_3> =
			  ~{'readConcurrency'=>R|M}~
		      in  apply 'info2Map'/2
			      (Info, _3)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 57
	  <[{'write_concurrency',W}|Info],M> when 'true' ->
	      %% Line 58
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_4> =
			  ~{'writeConcurrency'=>W|M}~
		      in  apply 'info2Map'/2
			      (Info, _4)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 59
	  <[{'compressed',C}|Info],M> when 'true' ->
	      %% Line 60
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_5> =
			  ~{'compressed'=>C|M}~
		      in  apply 'info2Map'/2
			      (Info, _5)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 61
	  <[{'memory',Size}|Info],M> when 'true' ->
	      %% Line 62
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_6> =
			  ~{'memory'=>Size|M}~
		      in  apply 'info2Map'/2
			      (Info, _6)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 63
	  <[{'owner',Pid}|Info],M> when 'true' ->
	      %% Line 64
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_7> =
			  ~{'owner'=>Pid|M}~
		      in  apply 'info2Map'/2
			      (Info, _7)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 65
	  <[{'name',Name}|Info],M> when 'true' ->
	      %% Line 66
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_8> =
			  ~{'name'=>Name|M}~
		      in  apply 'info2Map'/2
			      (Info, _8)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 67
	  <[{'size',Size}|Info],M> when 'true' ->
	      %% Line 68
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_9> =
			  ~{'size'=>Size|M}~
		      in  apply 'info2Map'/2
			      (Info, _9)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 69
	  <[{'node',Node}|Info],M> when 'true' ->
	      %% Line 70
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_10> =
			  ~{'node'=>Node|M}~
		      in  apply 'info2Map'/2
			      (Info, _10)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 71
	  <[{'named_table',Bool}|Info],M> when 'true' ->
	      %% Line 72
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_11> =
			  ~{'namedTable'=>Bool|M}~
		      in  apply 'info2Map'/2
			      (Info, _11)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 75
	  <[{'keypos',Pos}|Info],M> when 'true' ->
	      %% Line 76
	      case <> of
		( <>
		      when call 'erlang':'is_map'
			    (M) ->
		      let <_12> =
			  ~{'keyPos'=>Pos|M}~
		      in  apply 'info2Map'/2
			      (Info, _12)
		  -| ['compiler_generated'] )
		( <> when 'true' ->
		      ( primop 'match_fail'
			    ({'badmap',M})
			-| [{'eval_failure','badmap'}] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 79
	  <[_15|Info],M> when 'true' ->
	      %% Line 80
	      apply 'info2Map'/2
		  (Info, M)
	  %% Line 81
	  <[],M> when 'true' ->
	      M
	  ( <_14,_13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_14,_13})
		  -| [{'function_name',{'info2Map',2}}] )
	    -| ['compiler_generated'] )
	end
'access'/1 =
    %% Line 88
    fun (_0) ->
	case _0 of
	  <{'Public'}> when 'true' ->
	      'public'
	  %% Line 89
	  <{'Protected'}> when 'true' ->
	      'protected'
	  %% Line 90
	  <{'Private'}> when 'true' ->
	      'private'
	  %% Line 92
	  <'public'> when 'true' ->
	      {'Public'}
	  %% Line 93
	  <'protected'> when 'true' ->
	      {'Protected'}
	  %% Line 94
	  <'private'> when 'true' ->
	      {'Private'}
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'access',1}}] )
	    -| ['compiler_generated'] )
	end
'ttype'/1 =
    %% Line 97
    fun (_0) ->
	case _0 of
	  <{'Set'}> when 'true' ->
	      'set'
	  %% Line 98
	  <{'OrderedSet'}> when 'true' ->
	      'ordered_set'
	  %% Line 99
	  <{'Bag'}> when 'true' ->
	      'bag'
	  %% Line 100
	  <{'DuplicateBag'}> when 'true' ->
	      'duplicate_bag'
	  %% Line 102
	  <'set'> when 'true' ->
	      {'Set'}
	  %% Line 103
	  <'ordered_set'> when 'true' ->
	      {'OrderedSet'}
	  %% Line 104
	  <'bag'> when 'true' ->
	      {'Bag'}
	  %% Line 105
	  <'duplicate_bag'> when 'true' ->
	      {'DuplicateBag'}
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'ttype',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ETS')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('ETS', _0)
end