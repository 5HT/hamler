module 'Foreign' ['ffi0'/2,
		  'ffi1'/3,
		  'ffi2'/4,
		  'ffi3'/5,
		  'ffi4'/6,
		  'ffi5'/7,
		  'ffi6'/8,
		  'ffi7'/9,
		  'ffiIO0'/2,
		  'ffiIO1'/3,
		  'ffiIO2'/4,
		  'ffiIO3'/5,
		  'ffiIO4'/6,
		  'ffiIO5'/7,
		  'ffiIO6'/8,
		  'ffiIO7'/9,
		  'module_info'/0,
		  'module_info'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[70|[111|[114|[101|[105|[103|[110|[46|[101|[114|[108]]]]]]]]]]],1}],
		%% Line 57
		'compile' =
		    %% Line 57
		    [{'inline',[{'ffiApply',3}]}]]
'ffi0'/2 =
    %% Line 38
    fun (_0,_1) ->
	( let <_4> =
	      call %% Line 59
		   ( 'erlang'
		     -| ['compiler_generated'] ):%% Line 59
						 ( 'list_to_atom'
						   -| ['compiler_generated'] )
		  (_0)
	  in  ( let <_3> =
		    call %% Line 59
			 ( 'erlang'
			   -| ['compiler_generated'] ):%% Line 59
						       ( 'list_to_atom'
							 -| ['compiler_generated'] )
			(_1)
		in  %% Line 59
		    ( call _4:_3
			  ()
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	  -| ['compiler_generated'] )
'ffi1'/3 =
    %% Line 39
    fun (_0,_1,_2) ->
	let <_10> =
	    [_2|( []
		  -| ['compiler_generated'] )]
	in  ( let <_4> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_3> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_4, _3, _10)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffi2'/4 =
    %% Line 40
    fun (_0,_1,_2,_3) ->
	let <_10> =
	    [_2|( [_3|( []
			-| ['compiler_generated'] )]
		  -| ['compiler_generated'] )]
	in  ( let <_4> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_13> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_4, _13, _10)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffi3'/5 =
    %% Line 41
    fun (_0,_1,_2,_3,_4) ->
	let <_12> =
	    [_2|( [_3|( [_4|( []
			      -| ['compiler_generated'] )]
			-| ['compiler_generated'] )]
		  -| ['compiler_generated'] )]
	in  ( let <_15> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_16> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_15, _16, _12)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffi4'/6 =
    %% Line 42
    fun (_0,_1,_2,_3,_4,_5) ->
	let <_14> =
	    [_2|( [_3|( [_4|( [_5|( []
				    -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )]
			-| ['compiler_generated'] )]
		  -| ['compiler_generated'] )]
	in  ( let <_17> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_18> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_17, _18, _14)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffi5'/7 =
    %% Line 43
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	let <_16> =
	    [_2|( [_3|( [_4|( [_5|( [_6|( []
					  -| ['compiler_generated'] )]
				    -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )]
			-| ['compiler_generated'] )]
		  -| ['compiler_generated'] )]
	in  ( let <_19> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_20> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_19, _20, _16)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffi6'/8 =
    %% Line 44
    fun (_0,_1,_2,_3,_4,_5,_6,_7) ->
	let <_18> =
	    [_2|( [_3|( [_4|( [_5|( [_6|( [_7|( []
						-| ['compiler_generated'] )]
					  -| ['compiler_generated'] )]
				    -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )]
			-| ['compiler_generated'] )]
		  -| ['compiler_generated'] )]
	in  ( let <_21> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_22> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_21, _22, _18)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffi7'/9 =
    %% Line 45
    fun (_0,_1,_2,_3,_4,_5,_6,_7,_8) ->
	let <_20> =
	    [_2|( [_3|( [_4|( [_5|( [_6|( [_7|( [_8|( []
						      -| ['compiler_generated'] )]
						-| ['compiler_generated'] )]
					  -| ['compiler_generated'] )]
				    -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )]
			-| ['compiler_generated'] )]
		  -| ['compiler_generated'] )]
	in  ( let <_23> =
		  call %% Line 59
		       ( 'erlang'
			 -| ['compiler_generated'] ):%% Line 59
						     ( 'list_to_atom'
						       -| ['compiler_generated'] )
		      (_0)
	      in  ( let <_24> =
			call %% Line 59
			     ( 'erlang'
			       -| ['compiler_generated'] ):%% Line 59
							   ( 'list_to_atom'
							     -| ['compiler_generated'] )
			    (_1)
		    in  %% Line 59
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'apply'
							       -| ['compiler_generated'] )
			      (_23, _24, _20)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
'ffiIO0'/2 =
    %% Line 48
    fun (_0,_1) ->
	apply 'ffi0'/2
	    (_0, _1)
'ffiIO1'/3 =
    %% Line 49
    fun (_0,_1,_2) ->
	apply 'ffi1'/3
	    (_0, _1, _2)
'ffiIO2'/4 =
    %% Line 50
    fun (_0,_1,_2,_3) ->
	apply 'ffi2'/4
	    (_0, _1, _2, _3)
'ffiIO3'/5 =
    %% Line 51
    fun (_0,_1,_2,_3,_4) ->
	apply 'ffi3'/5
	    (_0, _1, _2, _3, _4)
'ffiIO4'/6 =
    %% Line 52
    fun (_0,_1,_2,_3,_4,_5) ->
	apply 'ffi4'/6
	    (_0, _1, _2, _3, _4, _5)
'ffiIO5'/7 =
    %% Line 53
    fun (_0,_1,_2,_3,_4,_5,_6) ->
	apply 'ffi5'/7
	    (_0, _1, _2, _3, _4, _5, _6)
'ffiIO6'/8 =
    %% Line 54
    fun (_0,_1,_2,_3,_4,_5,_6,_7) ->
	apply 'ffi6'/8
	    (_0, _1, _2, _3, _4, _5, _6, _7)
'ffiIO7'/9 =
    %% Line 55
    fun (_0,_1,_2,_3,_4,_5,_6,_7,_8) ->
	apply 'ffi7'/9
	    (_0, _1, _2, _3, _4, _5, _6, _7, _8)
'ffiApply'/3 =
    %% Line 58
    fun (_0,_1,_2) ->
	let <_4> =
	    call %% Line 59
		 'erlang':%% Line 59
			  'list_to_atom'
		(_0)
	in  let <_3> =
		call %% Line 59
		     'erlang':%% Line 59
			      'list_to_atom'
		    (_1)
	    in  %% Line 59
		call 'erlang':'apply'
		    (_4, _3, _2)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('Foreign')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('Foreign', _0)
end