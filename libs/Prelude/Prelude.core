module 'Prelude' ['intAdd'/2, 'intMul'/2,'numAdd'/2,'numMul'/2,'intSub'/2,'numSub'/2
                 ,'boolEq'/2,'intEq'/2,'numberEq'/2,'intLessThan'/2,'intLessThanOrEq'/2,'intGreaterThan'/2,'intGreaterThanOrEq'/2
                                                   ,'numLessThan'/2,'numLessThanOrEq'/2,'numGreaterThan'/2,'numGreaterThanOrEq'/2 ] attributes []
'intAdd'/2 =
    fun(_0, _1) -> call 'erlang':'+' (_0, _1)
'intMul'/2 =
    fun(_0, _1) -> call 'erlang':'*' (_0, _1)
'numAdd'/2 =
    fun(_0, _1) -> call 'erlang':'+' (_0, _1)
'numMul'/2 =
    fun(_0, _1) -> call 'erlang':'*' (_0, _1)
'intSub'/2 =
    fun(_0, _1) -> call 'erlang':'-' (_0, _1)
'numSub'/2 =
    fun(_0, _1) -> call 'erlang':'-' (_0, _1)
'boolEq'/2 =
    fun(_0, _1) -> call 'erlang':'==' (_0, _1)
'intEq'/2 =
    fun(_0, _1) -> call 'erlang':'==' (_0, _1)
'numberEq'/2 =
    fun(_0, _1) -> call 'erlang':'==' (_0, _1)
 
'intLessThan'/2 =
    fun(_0, _1) -> call 'erlang':'<' (_0, _1)
'intLessThanOrEq'/2 =
    fun(_0, _1) -> call 'erlang':'<=' (_0, _1)
'intGreaterThan'/2 =
    fun(_0, _1) -> call 'erlang':'>' (_0, _1)
'intGreaterThanOrEq'/2 =
    fun(_0, _1) -> call 'erlang':'>=' (_0, _1)

'numLessThan'/2 =
    fun(_0, _1) -> call 'erlang':'<' (_0, _1)
'numLessThanOrEq'/2 =
    fun(_0, _1) -> call 'erlang':'<=' (_0, _1)
'numGreaterThan'/2 =
    fun(_0, _1) -> call 'erlang':'>' (_0, _1)
'numGreaterThanOrEq'/2 =
    fun(_0, _1) -> call 'erlang':'>=' (_0, _1)

end